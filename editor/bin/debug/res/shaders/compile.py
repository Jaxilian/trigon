import sys
import os

def convert_to_header(spv_file, header_file):
    variable_name = os.path.splitext(os.path.basename(spv_file))[0]
    
    with open(spv_file, 'rb') as spv, open(header_file, 'w') as header:
        header.write(f"// Generated by convert_to_header.py\n")
        header.write(f"#ifndef {variable_name.upper()}_H\n")
        header.write(f"#define {variable_name.upper()}_H\n\n")
        header.write(f"#include <stdint.h>\n")
        header.write(f"static const uint32_t {variable_name}[] = {{\n")

        byte = spv.read(4)
        while byte:
            header.write("    " + ", ".join([f"0x{byte[i]:02x}{byte[i+1]:02x}{byte[i+2]:02x}{byte[i+3]:02x}" for i in range(0, len(byte), 4)]) + ",\n")
            byte = spv.read(4)

        header.write(f"}};\n\n")
        header.write(f"static const size_t {variable_name}_len = sizeof({variable_name}) / sizeof({variable_name}[0]);\n\n")
        header.write(f"#endif // {variable_name.upper()}_H\n")

if __name__ == "__main__":
    if len(sys.argv) != 3:
        print(f"Usage: {sys.argv[0]} <input.spv> <output.h>")
        sys.exit(1)
    
    convert_to_header(sys.argv[1], sys.argv[2])
